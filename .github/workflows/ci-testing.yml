name: CI testing

# see: https://help.github.com/en/actions/reference/events-that-trigger-workflows
on:
  # Trigger the workflow on push or pull request, but only for the master branch
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  pytest:

    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-18.04, ubuntu-20.04]
        python-version: [3.7]

    # Timeout: https://stackoverflow.com/a/59076067/4521646
    timeout-minutes: 35

    steps:
    - name: Checkout repository and submodules
      uses: actions/checkout@v3.0.2
      with:
        submodules: recursive

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}

    # Github Actions: Run step on specific OS: https://stackoverflow.com/a/57948488/4521646
    - name: Setup macOS
      if: runner.os == 'macOS'
      run: |
        brew install libomp  # https://github.com/pytorch/pytorch/issues/20030

    # Note: This uses an internal pip API and may not always work
    # https://github.com/actions/cache/blob/master/examples.md#multiple-oss-in-a-workflow
    - name: Get pip cache
      id: pip-cache
      run: |
        python -c "from pip._internal.locations import USER_CACHE_DIR; print('::set-output name=dir::' + USER_CACHE_DIR)"

    - name: Cache pip
      uses: actions/cache@v3.0.6
      with:
        path: ${{ steps.pip-cache.outputs.dir }}
        key: ${{ runner.os }}-py${{ matrix.python-version }}-${{ hashFiles('requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-py${{ matrix.python-version }}-

    - name: Install dependencies
      run: |
        sudo apt-get install ninja-build
        pip install --requirement requirements.txt --upgrade --quiet --find-links https://download.pytorch.org/whl/cpu/torch_stable.html --use-feature=2020-resolver
        pip install --requirement tests/requirements.txt --quiet
        python --version
        pip --version
        pip list
      shell: bash
  
    - name: Cache weights
      uses: actions/cache@v3.0.6
      with:
        key: weights-cache
        path: ~/.cache/torch

    - name: Tests
      run: |
        coverage run --source CenterNet -m py.test CenterNet tests -v --ignore CenterNet/models/backbones/DCNv2/tests --junitxml=junit/test-results-${{ runner.os }}-${{ matrix.python-version }}.xml

    - name: Statistics
      if: success()
      run: |
        coverage report
